version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres-db
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ../database/postgres:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - app-network

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse-db
    env_file: .env
    environment:
      CLICKHOUSE_DB: ${CLICKHOUSE_DB}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
    volumes:
      - ../database/clickhouse:/docker-entrypoint-initdb.d
    ports:
      - "8123:8123"  # HTTP interface
      - "9000:9000"  # Native TCP interface
    networks:
      - app-network

  auth:
    image: mcr.microsoft.com/dotnet/runtime:8.0
    container_name: auth
    ports:
      - "5000:80"
    networks:
      - app-network
    # Uncomment and configure the following lines if you have a Dockerfile for your auth service
    # build:
    #   context: ../services/auth
    #   dockerfile: Dockerfile

  frontend:
    build:
      context: ../services/frontend
    container_name: frontend
    ports:
      - "3000:3000"
    networks:
      - app-network
    # Uncomment and configure the following lines if you have a Dockerfile for your frontend service
    # build:
    #   context: ../services/frontend
    #   dockerfile: Dockerfile

networks:
  app-network:
    driver: bridge
